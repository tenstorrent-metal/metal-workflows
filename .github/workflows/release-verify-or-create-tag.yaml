name: Verify/create new release tag

on:
  workflow_call:
    inputs:
      fetch_depth:
        description: "Commit depth to checkout to scan for previous release tags"
        default: 0
        type: number
      bump_each_commit:
        description: "Bump each commit as a patch version"
        default: true
        type: boolean
    secrets:
      CHECKOUT_TOKEN:
        required: true
    outputs:
      version:
        description: "New version"
        value: ${{ jobs.verify-create-new-tag.outputs.version }}

jobs:
  verify-create-new-tag:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-next-semantic-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CHECKOUT_TOKEN }}
          fetch-depth: ${{ inputs.fetch_depth }}
      - uses: paulhatch/semantic-version@v5.0.2
        id: get-next-semantic-version
        with:
          tag_prefix: "v"
          version_format: "v${major}.${minor}.${patch}"
          bump_each_commit: ${{ inputs.bump_each_commit }}
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const owner = "${{ github.repository_owner }}";
            const repo = "${{ github.repository }}".split('/')[1];
            const version = "${{ steps.get-next-semantic-version.outputs.version }}";
            const sha = "${{ github.sha }}";
            const tag = await github.rest.git.createTag({
              owner: owner,
              repo: repo,
              tag: version,
              message: `Release for ${version}`,
              object: sha,
              type: "commit",
              tagger: {
                name: "Jasmina Vasiljevic",
                email: "jvasiljevic@tenstorrent.com",
              }
            });
            github.rest.git.createRef({
              owner: owner,
              repo: repo,
              ref: `refs/tags/${version}`,
              sha: tag.data.sha,
            });
